from constants import *
from objects import *
from Function import *
from fsm import *

from create_bot import dp,bot

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher import Dispatcher

async def –ü—Ä–æ–º–æ–∫–æ–¥—ã(message: types.Message, state: FSMContext):
    chat_id = message.from_user.id
    async with state.proxy() as data:
        data['promo'] = message.text
        if data['promo'] == "eRop1n":
            if get_data(chat_id, 'promo1') == 0:
                await dp.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç—ã –≤—ã–π–≥—Ä–∞–ª 100üíé")
                send_data(chat_id, 'balance', get_data(chat_id, 'balance') + 100)
                send_data(chat_id, 'promo1', 1)
            else: await dp.send_message(chat_id, "–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥")  
        elif data['promo'] == 'Suzanne_well_done':
            if get_data(message.from_user.id, 'promo2') == 0 and message.from_user.id != 1143067536:
                await dp.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç—ã –≤—ã–π–≥—Ä–∞–ª 150üíé.–ê —Ç–∞–∫–∂–µ —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∞–ª –°—é–∑–∞–Ω—É –¥–µ–Ω–µ–∂–∫–æ–π, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥))")
                send_data(chat_id, 'balance', get_data(chat_id, 'balance') + 150)
                send_data(1143067536, 'balance', get_data(1143067536, 'balance') + 150)
                send_data(chat_id, 'promo2', 1)
            elif message.from_user.id == 1143067536: await dp.send_message(chat_id, "–≠—Ç–æ –∂–µ —Ç–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞, —Å—Ö–∏—Ç—Ä–∏—Ç—å —Ö–æ—Ç–µ–ª–∞?") 
            else: await dp.send_message(chat_id, "–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥")
        elif data['promo'] == 'urarelis':
            if get_data(message.from_user.id, 'promo3') == 0:
                await dp.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç—ã –≤—ã–π–≥—Ä–∞–ª 250üíé")
                send_data(chat_id, 'balance', get_data(chat_id, 'balance') + 250)
                send_data(chat_id, 'promo3', 1)
            else: await dp.send_message(chat_id, "–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥")
        else: await dp.send_message(chat_id, "–¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç—Éüò¢")
    await state.finish()

def reg_handlers_promocodes(bot: Dispatcher):
    bot.register_message_handler(–ü—Ä–æ–º–æ–∫–æ–¥—ã,state=Form_promo.promo)
